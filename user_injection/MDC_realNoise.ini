[input]
dataseed=1234
seglen=4.0
window=1.0
flow=32
srate=4096
; Make sure the seglen and srate is consistent with the injection template

ifo-list=['H1', 'L1']

[engine]
install=/cvmfs/oasis.opensciencegrid.org/ligo/sw/conda/envs/igwn-py39
bayeswave=%(install)s/bin/BayesWave
bayeswave_post=%(install)s/bin/BayesWavePost
megaplot=%(install)s/bin/megaplot.py

[datafind]
; Channel names and Frame types for timeseries near any LIGO event can be found in the GWOSC catalog: https://gwosc.org/eventapi/html/GWTC/
channel-list={'H1':'H1:DCS-CALIB_STRAIN_CLEAN_SUB60HZ_C01','L1':'L1:DCS-CALIB_STRAIN_CLEAN_SUB60HZ_C01'}
frtype-list={'H1':'H1_HOFT_CLEAN_SUB60HZ_C01','L1':'L1_HOFT_CLEAN_SUB60HZ_C01'}
url-type=file
veto-categories=[1]

[injections]
; Specify full path to the injection cache file
mdc-cache=/home/placeholder/MDC.cache
mdc-channels={'H1':'H1:DCS-CALIB_STRAIN_CLEAN_SUB60HZ_C01','L1':'L1:DCS-CALIB_STRAIN_CLEAN_SUB60HZ_C01'}
mdc-prefactor=1

[bayeswave_options]
; command line options for BayesWave.  See BayesWave --help
bayesLine=
updateGeocenterPSD=
waveletPrior=
Dmax=100
Niter=5000
; Note! This is a very small Niter for testing purposes only. For scientific results use
; Niter=1000000
; To use multithreading, un-comment the lines below
; Nchain=20
; Nthreads=4

[bayeswave_post_options]
; command line options for BayesWavePost.  See BayesWavePost --help
bayesLine=
0noise=

[condor]
; see e.g., https://ldas-gridmon.ligo.caltech.edu/ldg_accounting/user for the correct accounting group
universe=vanilla
checkpoint=
bayeswave-request-memory=16000MB
bayeswave_post-request-memory=16000MB
bayeswave-request-disk=10000MB
bayeswave_post-request-disk=10000MB
datafind=/usr/bin/gw_data_find
ligolw_print=/usr/bin/ligolw_print
segfind=/usr/bin/ligolw_segment_query_dqsegdb
accounting-group = ligo.dev.o4.burst.paramest.bayeswave